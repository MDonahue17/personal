{"version":3,"sources":["logo.svg","components/Footer.jsx","App.js","components/Stories.jsx","components/NotFound.jsx","serviceWorker.js","components/List.jsx","components/ToDo.jsx","index.js"],"names":["module","exports","Footer","state","class","Component","App","className","style","paddingTop","padding","Stories","allPlaces","fetch","then","data","json","results","push","console","log","catch","error","NotFound","Boolean","window","location","hostname","match","List","items","i","this","props","length","ToDo","routing","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","exact","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iJAAAA,EAAOC,QAAU,IAA0B,kC,qMCiB5BC,G,iNAbXC,MAAQ,G,wEAEJ,OACI,6BACI,6BACA,uBAAGC,MAAM,uB,GANJC,cCyBNC,MAvBf,WACE,OACE,yBAAKC,UAAU,OACb,4CACA,yBAAKH,MAAM,aACT,yBAAKI,MAAO,CAAEC,WAAY,UAG1B,yBAAKL,MAAM,OACT,yBAAKI,MAAO,CAAEE,QAAS,QAAUN,MAAM,UAGvC,yBAAKI,MAAO,CAAEE,QAAS,QAAUN,MAAM,YAM3C,kBAAC,EAAD,Q,QCGSO,E,2MAvBXR,MAAQ,G,wEAEJ,OACI,yBAAKC,MAAM,aAAX,a,0CAOJ,IAAMQ,EAAY,GAGlBC,MADI,sCAECC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GACFL,EAAUM,KAAV,MAAAN,EAAS,YAASK,IAClBE,QAAQC,IAAIR,MAEfS,OAAM,SAAAC,GAAK,OAAIH,QAAQC,IAAIE,U,GApBlBjB,aCWPkB,E,2MAVXpB,MAAQ,G,wEAEJ,OACI,kD,GAJWE,aCUHmB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,ICDSC,E,2MAdX1B,MAAQ,G,wEAGJ,IADA,IAAI2B,EAAQ,GACJC,EAAI,EAAGA,EAAIC,KAAKC,MAAMH,MAAMI,OAAQH,IACxCD,EAAMZ,KAAK,4BAAKc,KAAKC,MAAMH,MAAMC,KAErC,OACI,6BACKD,O,GATEzB,aCkBJ8B,E,2MAhBXhC,MAAQ,CACJ2B,MAAO,CAAC,uBAAwB,0CAA2C,oDACnE,UAAW,wBAAyB,uBAAwB,+CAC5D,6C,wEAIR,OACI,yBAAK1B,MAAM,aACP,kBAAC,EAAD,CAAM0B,MAAOE,KAAK7B,MAAM2B,a,GAVrBzB,aCQb+B,EACF,6BACI,kBAAC,IAAD,KACI,6BACI,yBAAKhC,MAAM,+CACP,kBAAC,IAAD,CAAMiC,GAAG,KACL,uBAAGjC,MAAM,gBAAT,YAEJ,4BAAQA,MAAM,iBAAiBkC,KAAK,SAASC,cAAY,WAAWC,cAAY,aAAaC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,qBACpJ,0BAAMvC,MAAM,yBAEhB,yBAAKA,MAAM,2BAA2BwC,GAAG,aACrC,yBAAKxC,MAAM,cACP,kBAAC,IAAD,CAAMiC,GAAG,aACL,uBAAGjC,MAAM,mBAAT,SAEJ,kBAAC,IAAD,CAAMiC,GAAG,YACL,uBAAGjC,MAAM,mBAAT,YAEJ,kBAAC,IAAD,CAAMiC,GAAG,SACL,uBAAGjC,MAAM,mBAAT,YAKZ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOyC,OAAK,EAACC,KAAK,YAAYC,UAAWzC,IACzC,kBAAC,IAAD,CAAOuC,OAAK,EAACC,KAAK,IAAIC,UAAWzC,IACjC,kBAAC,IAAD,CAAOwC,KAAK,WAAWC,UAAWpC,IAClC,kBAAC,IAAD,CAAOmC,KAAK,QAAQC,UAAWZ,IAC/B,kBAAC,IAAD,CAAOY,UAAWxB,QAS1CyB,IAASC,OAAOb,EAASc,SAASC,eAAe,SHiF3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxC,MAAK,SAAAyC,GACjCA,EAAaC,kB","file":"static/js/main.08c46abe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nimport './footer_icon.scss';\r\n\r\nclass Footer extends Component {\r\n    state = {}\r\n    render() {\r\n        return (\r\n            <div>\r\n                <hr />\r\n                <i class=\"fab fa-github\"></i>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>ross is poop</h1>\n      <div class=\"container\">\n        <div style={{ paddingTop: \"10px\" }}>\n          \n        </div>\n        <div class=\"row\">\n          <div style={{ padding: \"10px\" }} class=\"col-7\">\n            \n          </div>\n          <div style={{ padding: \"10px\" }} class=\"col-5\">\n            \n          </div>\n        </div>\n\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React, { Component } from 'react';\r\n\r\nclass Stories extends Component {\r\n    state = {}\r\n    render() {\r\n        return (\r\n            <div class=\"container\">\r\n                Stories\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        const allPlaces = [];\r\n        const endpoint =\r\n            \"http://localhost:3000/api/v1/users\";\r\n        fetch(endpoint)\r\n            .then(data => data.json())\r\n            .then(results => {\r\n                allPlaces.push(...results)\r\n                console.log(allPlaces)\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n}\r\n\r\nexport default Stories;","import React, { Component } from 'react';\r\n\r\nclass NotFound extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <h1>\r\n                404: NOT FOUND\r\n            </h1>\r\n         );\r\n    }\r\n}\r\n \r\nexport default NotFound;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\r\n\r\nclass List extends Component {\r\n    state = {  }\r\n    render() { \r\n        let items = []\r\n        for(let i = 0; i < this.props.items.length; i++) {\r\n            items.push(<li>{this.props.items[i]}</li>)\r\n        }\r\n        return ( \r\n            <div>\r\n                {items}\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default List;","import React, { Component } from 'react';\r\nimport List from './List';\r\n\r\nclass ToDo extends Component {\r\n    state = { \r\n        items: [\"Begin making the api\", \"create the footer with ig, github, vsco\", \"check if vsco has an api and connect your account\",\r\n                \"Spotify\", \"Add stories to the DB\", \"Style the front page\", \"full connection from DB to Server to webpage\", \r\n                \"Move api from local host to cloud server\"]\r\n     }\r\n\r\n    render() { \r\n        return ( \r\n            <div class=\"container\">\r\n                <List items={this.state.items} />\r\n            </div>\r\n            \r\n         );\r\n    }\r\n}\r\n \r\nexport default ToDo;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Route, Link, BrowserRouter as Router, Switch } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport Stories from './components/Stories';\nimport NotFound from './components/NotFound'\nimport * as serviceWorker from './serviceWorker';\nimport ToDo from './components/ToDo';\n\nconst routing = (\n    <div>\n        <Router>\n            <div>\n                <nav class=\"navbar navbar-expand-lg navbar-dark bg-info\">\n                    <Link to=\"/\">\n                        <a class=\"navbar-brand\">Website</a>\n                    </Link>\n                    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n                        <div class=\"navbar-nav\">\n                            <Link to=\"/personal\">\n                                <a class=\"nav-link active\">Home</a>\n                            </Link>\n                            <Link to=\"/stories\">\n                                <a class=\"nav-link active\">Stories</a>\n                            </Link>\n                            <Link to=\"/todo\">\n                                <a class=\"nav-link active\">ToDo</a>\n                            </Link>\n                        </div>\n                    </div>\n                </nav>\n                    <Switch>\n                        <Route exact path=\"/personal\" component={App} />\n                        <Route exact path=\"/\" component={App} />\n                        <Route path=\"/stories\" component={Stories} />\n                        <Route path=\"/todo\" component={ToDo} />\n                        <Route component={NotFound} />\n                    </Switch>\n            </div>\n        </Router>\n    </div>\n\n\n)\n\nReactDOM.render(routing, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}